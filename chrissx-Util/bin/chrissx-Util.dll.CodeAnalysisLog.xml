<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="d:\visualstudio\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="15.0">
 <Namespaces>
  <Namespace Name="chrissx_Util.Conversion">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'chrissx_Util.Conversion' with another namespace.</Issue>
    </Message>
    <Message Id="chrissx" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'chrissx' in namespace name 'chrissx_Util.Conversion' by changing it to 'Chrissx'.</Issue>
    </Message>
    <Message Id="Util" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Util' in namespace name 'chrissx_Util.Conversion'.</Issue>
    </Message>
    <Message Id="chrissx" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'chrissx' in namespace name 'chrissx_Util.Conversion'.</Issue>
    </Message>
    <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="95" Level="Error">Remove the underscores from namespace name 'chrissx_Util.Conversion'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="chrissx_Util.Files">
   <Messages>
    <Message Id="chrissx" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'chrissx' in namespace name 'chrissx_Util.Files' by changing it to 'Chrissx'.</Issue>
    </Message>
    <Message Id="Util" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Util' in namespace name 'chrissx_Util.Files'.</Issue>
    </Message>
    <Message Id="chrissx" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'chrissx' in namespace name 'chrissx_Util.Files'.</Issue>
    </Message>
    <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="95" Level="Error">Remove the underscores from namespace name 'chrissx_Util.Files'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="chrissx_Util.Parsers">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'chrissx_Util.Parsers' with another namespace.</Issue>
    </Message>
    <Message Id="chrissx" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'chrissx' in namespace name 'chrissx_Util.Parsers' by changing it to 'Chrissx'.</Issue>
    </Message>
    <Message Id="Util" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Util' in namespace name 'chrissx_Util.Parsers'.</Issue>
    </Message>
    <Message Id="chrissx" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'chrissx' in namespace name 'chrissx_Util.Parsers'.</Issue>
    </Message>
    <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="95" Level="Error">Remove the underscores from namespace name 'chrissx_Util.Parsers'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="chrissx_Util.Strings">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'chrissx_Util.Strings' with another namespace.</Issue>
    </Message>
    <Message Id="chrissx" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'chrissx' in namespace name 'chrissx_Util.Strings' by changing it to 'Chrissx'.</Issue>
    </Message>
    <Message Id="Util" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Util' in namespace name 'chrissx_Util.Strings'.</Issue>
    </Message>
    <Message Id="chrissx" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'chrissx' in namespace name 'chrissx_Util.Strings'.</Issue>
    </Message>
    <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="95" Level="Error">Remove the underscores from namespace name 'chrissx_Util.Strings'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\bin\chrissx-Util.dll">
   <Modules>
    <Module Name="chrissx-util.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'chrissx-Util.dll' with a strong name key.</Issue>
      </Message>
      <Message Id="chrissx-Util" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'chrissx-Util' in assembly name 'chrissx-Util.dll' by changing it to 'Chrissx-util'.</Issue>
      </Message>
      <Message Id="chrissx-Util" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="75" Level="CriticalWarning">Correct the spelling of 'chrissx-Util' in assembly name 'chrissx-Util.dll'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'chrissx-Util.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithComVisible" Category="Microsoft.Design" CheckId="CA1017" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="NonBreaking">
       <Issue Name="AttributeTrue" Certainty="95" Level="Error">Consider changing the ComVisible attribute on 'chrissx-Util.dll' to false, and opting in at the type level.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="chrissx_Util.Conversion">
       <Types>
        <Type Name="Converter" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetBytes(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="57">In method 'Converter.GetBytes(this bool)', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBytes(System.Char)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="c" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="62">In method 'Converter.GetBytes(this char)', consider providing a more meaningful name than parameter name 'c'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBytes(System.Double)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="d" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="67">In method 'Converter.GetBytes(this double)', consider providing a more meaningful name than parameter name 'd'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBytes(System.Int16)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="37">In method 'Converter.GetBytes(this short)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBytes(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="27">In method 'Converter.GetBytes(this int)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBytes(System.Int64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="l" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="32">In method 'Converter.GetBytes(this long)', consider providing a more meaningful name than parameter name 'l'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBytes(System.Single)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="f" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="72">In method 'Converter.GetBytes(this float)', consider providing a more meaningful name than parameter name 'f'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBytes(System.UInt16)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="52">In method 'Converter.GetBytes(this ushort)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBytes(System.UInt32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="i" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="42">In method 'Converter.GetBytes(this uint)', consider providing a more meaningful name than parameter name 'i'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBytes(System.UInt64)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="l" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="47">In method 'Converter.GetBytes(this ulong)', consider providing a more meaningful name than parameter name 'l'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToBool(System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="88">In method 'Converter.ToBool(this byte[])', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="bool" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="88">Consider replacing the language-specific data type identifier 'Bool' in member name 'Converter.ToBool(this byte[])' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToChar(System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="113">In method 'Converter.ToChar(this byte[])', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToDouble(System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="118">In method 'Converter.ToDouble(this byte[])', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToFloat(System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="123">In method 'Converter.ToFloat(this byte[])', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="float" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="123">Consider replacing the language-specific data type identifier 'Float' in member name 'Converter.ToFloat(this byte[])' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToInt(System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="78">In method 'Converter.ToInt(this byte[])', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="int" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="78">Consider replacing the language-specific data type identifier 'Int' in member name 'Converter.ToInt(this byte[])' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToList`1(!!0[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="16">Change 'List&lt;T&gt;' in 'Converter.ToList&lt;T&gt;(this T[])' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToLong(System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="83">In method 'Converter.ToLong(this byte[])', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="long" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="83">Consider replacing the language-specific data type identifier 'Long' in member name 'Converter.ToLong(this byte[])' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToShort(System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="93">In method 'Converter.ToShort(this byte[])', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="short" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="93">Consider replacing the language-specific data type identifier 'Short' in member name 'Converter.ToShort(this byte[])' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToUInt(System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="98">In method 'Converter.ToUInt(this byte[])', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="uint" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="98">Consider replacing the language-specific data type identifier 'UInt' in member name 'Converter.ToUInt(this byte[])' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToULong(System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="103">In method 'Converter.ToULong(this byte[])', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="ulong" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="103">Consider replacing the language-specific data type identifier 'ULong' in member name 'Converter.ToULong(this byte[])' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToUShort(System.Byte[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="b" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="108">In method 'Converter.ToUShort(this byte[])', consider providing a more meaningful name than parameter name 'b'.</Issue>
            </Message>
            <Message Id="ushort" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Conversion" File="Converter.cs" Line="108">Consider replacing the language-specific data type identifier 'UShort' in member name 'Converter.ToUShort(this byte[])' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="chrissx_Util.Files">
       <Types>
        <Type Name="CopyFinishedEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="UseGenericEventHandlerInstances" Category="Microsoft.Design" CheckId="CA1003" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Remove 'CopyFinishedEventHandler' and replace its usage with EventHandler&lt;T&gt;</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="CopyProgressChangedEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="UseGenericEventHandlerInstances" Category="Microsoft.Design" CheckId="CA1003" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Remove 'CopyProgressChangedEventHandler' and replace its usage with EventHandler&lt;T&gt;</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="CopyStartedEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="UseGenericEventHandlerInstances" Category="Microsoft.Design" CheckId="CA1003" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Remove 'CopyStartedEventHandler' and replace its usage with EventHandler&lt;T&gt;</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="FileManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AsyncCopy(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dest" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Files" File="FileManager.cs" Line="68">In method 'FileManager.AsyncCopy(string, string)', correct the spelling of 'dest' in parameter name 'dest' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Files" File="FileManager.cs" Line="68">In method 'FileManager.AsyncCopy(string, string)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#AsyncMove(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dest" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Files" File="FileManager.cs" Line="31">In method 'FileManager.AsyncMove(string, string)', correct the spelling of 'dest' in parameter name 'dest' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Files" File="FileManager.cs" Line="31">In method 'FileManager.AsyncMove(string, string)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SyncCopy(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dest" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Files" File="FileManager.cs" Line="73">In method 'FileManager.SyncCopy(string, string)', correct the spelling of 'dest' in parameter name 'dest' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Files" File="FileManager.cs" Line="73">In method 'FileManager.SyncCopy(string, string)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SyncMove(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="dest" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Files" File="FileManager.cs" Line="36">In method 'FileManager.SyncMove(string, string)', correct the spelling of 'dest' in parameter name 'dest' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="src" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Files" File="FileManager.cs" Line="36">In method 'FileManager.SyncMove(string, string)', correct the spelling of 'src' in parameter name 'src' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CopyFinished" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'CopyFinishedEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CopyProgressChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'CopyProgressChangedEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CopyStarted" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'CopyStartedEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MoveFinished" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'MoveFinishedEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MoveProgressChanged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'MoveProgressChangedEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MoveStarted" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'MoveStartedEventHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MoveFinishedEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="UseGenericEventHandlerInstances" Category="Microsoft.Design" CheckId="CA1003" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Remove 'MoveFinishedEventHandler' and replace its usage with EventHandler&lt;T&gt;</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MoveProgressChangedEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="UseGenericEventHandlerInstances" Category="Microsoft.Design" CheckId="CA1003" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Remove 'MoveProgressChangedEventHandler' and replace its usage with EventHandler&lt;T&gt;</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="MoveStartedEventHandler" Kind="Delegate" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="UseGenericEventHandlerInstances" Category="Microsoft.Design" CheckId="CA1003" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Remove 'MoveStartedEventHandler' and replace its usage with EventHandler&lt;T&gt;</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ProgressChangedArgs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
           <Issue Certainty="95" Level="Error">Rename 'ProgressChangedArgs' to end in 'EventArgs'.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="chrissx_Util.Parsers">
       <Types>
        <Type Name="Csv" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ParseCsv(System.String[],System.Byte,System.Byte,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="preCut" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Parsers" File="Csv.cs" Line="18">In member 'Csv.ParseCsv(string[], byte, byte, string)', the compound word 'preCut' in parameter name 'preCut' exists as a discrete term. If your usage is intended to be single word, case it as 'precut' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Parsers" File="Csv.cs" Line="18">Change 'List&lt;List&lt;string&gt;&gt;' in 'Csv.ParseCsv(string[], byte, byte, string)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Parsers" File="Csv.cs" Line="18">Consider a design where 'Csv.ParseCsv(string[], byte, byte, string)' doesn't nest generic type 'List&lt;List&lt;string&gt;&gt;'.</Issue>
            </Message>
            <Message Id="seperator" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Parsers" File="Csv.cs" Line="18">In method 'Csv.ParseCsv(string[], byte, byte, string)', correct the spelling of 'seperator' in parameter name 'seperator' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="suf" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Parsers" File="Csv.cs" Line="18">In method 'Csv.ParseCsv(string[], byte, byte, string)', correct the spelling of 'suf' in parameter name 'sufCut' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Parsers" File="Csv.cs" Line="19">In externally visible method 'Csv.ParseCsv(string[], byte, byte, string)', validate parameter 'csvLines' before using it.</Issue>
            </Message>
            <Message Id="3" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Parsers" File="Csv.cs" Line="23">In externally visible method 'Csv.ParseCsv(string[], byte, byte, string)', validate parameter 'seperator' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="chrissx_Util.Strings">
       <Types>
        <Type Name="StringUtil" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Util" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Util' in type name 'StringUtil'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#IsNumeric(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="s" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Name="MemberParameterMoreMeaningfulName" Certainty="75" Level="CriticalWarning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Strings" File="StringUtil.cs" Line="41">In method 'StringUtil.IsNumeric(this string)', consider providing a more meaningful name than parameter name 's'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Strings" File="StringUtil.cs" Line="41">In externally visible method 'StringUtil.IsNumeric(this string)', validate parameter 's' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RemoveEmpty`1(System.Collections.Generic.List`1&lt;!!0&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="Error" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Strings" File="StringUtil.cs" Line="25">Change 'List&lt;T&gt;' in 'StringUtil.RemoveEmpty&lt;T&gt;(this List&lt;T&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
             <Issue Certainty="95" Level="Error" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Strings" File="StringUtil.cs" Line="25">Change 'List&lt;T&gt;' in 'StringUtil.RemoveEmpty&lt;T&gt;(this List&lt;T&gt;)' to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Strings" File="StringUtil.cs" Line="28">Replace the call to 'string.operator !=(string, string)' in 'StringUtil.RemoveEmpty&lt;T&gt;(this List&lt;T&gt;)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2018-02-21 18:48:08Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="D:\Bibliotheken\Desktop\chrissx-Util\chrissx-Util\Strings" File="StringUtil.cs" Line="27">In externally visible method 'StringUtil.RemoveEmpty&lt;T&gt;(this List&lt;T&gt;)', validate parameter 'list' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberParameterShouldBeDiscreteTerm">In member {0}, the compound word '{1}' in parameter name {2} exists as a discrete term. If your usage is intended to be single word, case it as '{3}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotExposeGenericLists" Category="Microsoft.Design" CheckId="CA1002">
   <Name>Do not expose generic lists</Name>
   <Description>Do not expose List&lt;T&gt; in object models. Use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt; instead. List&lt;T&gt; is meant to be used from implementation, not in object model API. List&lt;T&gt; is optimized for performance at the cost of long term versioning. For example, if you return List&lt;T&gt; to the client code, you will not ever be able to receive notifications when client code modifies the collection.</Description>
   <Resolution Name="Default">Change {0} in {1} to use Collection&lt;T&gt;, ReadOnlyCollection&lt;T&gt; or KeyedCollection&lt;K,V&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182142.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006">
   <Name>Do not nest generic types in member signatures</Name>
   <Description>Avoid API that require users to instantiate a generic type with another generic type as type argument. The syntax gets too complex.</Description>
   <Resolution Name="Default">Consider a design where {0} doesn't nest generic type {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182144.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Assembly">Correct the spelling of '{0}' in assembly name {1}.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameterMoreMeaningfulName">In method {0}, consider providing a more meaningful name than parameter name {1}.</Resolution>
   <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
   <Name>Identifiers should have correct suffix</Name>
   <Description>Types that extend certain base types have specified name suffixes. Types that extend Attribute, for example, should be suffixed in 'Attribute', as in ObsoleteAttribute. This rules checks types that extend several base types, including Attribute, Exception, EventArgs, IMembershipPermission, Stream, and others.</Description>
   <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182244.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageSpecificMember">Consider replacing the language-specific data type identifier '{0}' in member name {1} with either a language-independent equivalent or a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Namespace">Remove the underscores from namespace name '{0}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithComVisible" Category="Microsoft.Design" CheckId="CA1017">
   <Name>Mark assemblies with ComVisibleAttribute</Name>
   <Description>The System.Runtime.InteropServices.ComVisible attribute indicates whether COM clients can use the library. Good design dictates that developers explicitly indicate COM visibility. The default value for this attribute is 'true'. However, the best design is to mark the assembly ComVisible false, and then mark types, interfaces, and individual members as ComVisible true, as appropriate.</Description>
   <Resolution Name="AttributeTrue">Consider changing the ComVisible attribute on {0} to false, and opting in at the type level.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182157.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError, Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>Test for empty strings using string length</Name>
   <Description>To test for empty strings, check if String.Length is equal to zero. Constructs such as "".Equals(someString) and String.Empty.Equals(someString) are less efficient than testing the string length. Replace these with checks for someString.Length == 0.</Description>
   <Resolution Name="IsNullOrEmpty">Replace the call to {0} in {1} with a call to 'String.IsNullOrEmpty'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="UseGenericEventHandlerInstances" Category="Microsoft.Design" CheckId="CA1003">
   <Name>Use generic event handler instances</Name>
   <Description>Do not declare new delegates to be used as event handlers when targeting a version of the .NET Framework that supports generics. Use an instance EventHandler&lt;T&gt; instead.</Description>
   <Resolution Name="Default">Remove {0} and replace its usage with EventHandler&lt;T&gt;</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182178.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
